# name: CI/CD Workflow

# on:
#   push:
#     branches:
#       - dev
#   workflow_dispatch: # Add manual trigger for main branch

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     container:
#       image: node:16.14.0

#     steps:
#       - uses: actions/checkout@v2

#       - name: Cache node modules
#         uses: actions/cache@v2
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-
#       - name: Install dependencies
#         run: npm i --production

#   lint:
#     needs: build
#     runs-on: ubuntu-latest
#     container:
#       image: node:16.14.0

#     steps:
#       - uses: actions/checkout@v2

#   security_scan:
#     needs: build
#     runs-on: ubuntu-latest
#     container:
#       image: node:16.14.0

#     steps:
#       - uses: actions/checkout@v2

#       - name: Security Scan
#         uses: zricethezav/gitleaks-action@v1.5.0

#   deploy_dev:
#     if: github.ref == 'refs/heads/dev'
#     runs-on: ubuntu-latest
#     steps:
#       - name: ðŸšš Get latest code
#         uses: actions/checkout@v2

#       - name: ðŸ“‚ Sync files to development
#         uses: SamKirkland/FTP-Deploy-Action@v4.3.1
#         with:
#           server: ftp.trimworldwide.com
#           username: ${{ secrets.DEV_FTP_USERNAME }}
#           password: ${{ secrets.DEV_FTP_PASSWORD }}
#           server-dir: /

#   deploy_main:
#     if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
#     runs-on: ubuntu-latest
#     steps:
#       - name: ðŸšš Get latest code
#         uses: actions/checkout@v2

#       - name: ðŸ“‚ Sync files to production
#         uses: SamKirkland/FTP-Deploy-Action@v4.3.5
#         with:
#           server: ftp.trimworldwide.com
#           username: ${{ secrets.LIVE_FTP_USERNAME }}
#           password: ${{ secrets.LIVE_FTP_PASSWORD }}
#           server-dir: /

name: CI/CD Workflow

on:
  push:
    branches:
      - dev
  workflow_dispatch: # Add manual trigger for main branch

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: node:16.14.0

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm i --production

  lint:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: node:16.14.0

    steps:
      - uses: actions/checkout@v2

  security_scan:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: node:16.14.0

    steps:
      - uses: actions/checkout@v2

      - name: Security Scan
        uses: zricethezav/gitleaks-action@v1.5.0

  deploy_dev:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: ðŸ“‚ Sync files to development
        uses: SamKirkland/FTP-Deploy-Action@v4.3.1
        with:
          server: ftp.trimworldwide.com
          username: ${{ secrets.DEV_FTP_USERNAME }}
          password: ${{ secrets.DEV_FTP_PASSWORD }}
          server-dir: /
          protocol: 'ftp'
          passive: true
          timeout: 60000s

  deploy_main:
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: ðŸ“‚ Sync files to production
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ftp.trimworldwide.com
          username: ${{ secrets.LIVE_FTP_USERNAME }}
          password: ${{ secrets.LIVE_FTP_PASSWORD }}
          server-dir: /
          protocol: 'ftp'
          passive: true
          timeout: 60000s

